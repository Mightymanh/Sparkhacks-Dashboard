---
import DashboardLayout from "../layouts/DashboardLayout.astro";
import { app, db } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";

// information that will be displayed in dashboard page
let userEmail;
let userName;
let userPhoto;
let registered = false
let result = ""
let isAdmin = false

const resultMessage = {
  waiting: "We have received your application and will review it shortly. Please check this website for updates.",
  declined: "Due to limited space, your application has been declined. Please come back next year to re-apply!",
  waitlist: "Due to limited space, your application has been waitlisted. We will reach out with status updates.",
  accepted: "You've been accepted! Please check your inbox for next steps in the coming days."
};

const getMessage = (result) => resultMessage[result] || "Unknown result. Please contact support.";

try {
  const auth = getAuth(app);

  // no session or invalid session will redirect to sign in page
  const sessionCookieObj = Astro.cookies.get("__session");
  if (!sessionCookieObj) {
    return Astro.redirect("/");
  }
  const sessionCookie = sessionCookieObj.value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (!decodedCookie) {
    return Astro.redirect("/");
  }

  // invalid user will redirect to sign in page
  const user = await auth.getUser(decodedCookie.uid);
  if (!user) {
    return Astro.redirect("/");
  }

  userEmail = user.email;
  userName = user.displayName;
  userPhoto = user.photoURL

  // check if user is an admin
  if (user.customClaims && (user.customClaims as any).admin === true) {
    isAdmin = true
  }

  // check if the user already register the application:
  const docSnap = await db.collection("Forms").doc(decodedCookie.email as string).get()
  if (docSnap.exists) {
    registered = true
    const data = docSnap.data()
    result = data?.appResult || ""
  }

} catch (err) {
  console.error(err);
  return Astro.redirect("/");
}
---

<DashboardLayout>
  <section class="user-info">
    <h1>Welcome {isAdmin && "Admin"}, {userName}!</h1>
    <img src={userPhoto} alt="avatar" width="35" height="35" style="border-radius: 9999px;"/>
  </section>
  <section class={`dashboard-result ${(result !== "")? result : ""}`} style={(result !== "")? "" : "display: none"}>
    <strong>Application Result: </strong>{getMessage(result)}
  </section>
  <section>
  </section>
  <section class="dashboard-app">
    <div style="display: flex; justify-content: space-between; align-items: center">
      <h2>Application to SparkHacks</h2>
      <div><strong>Close at:</strong> 11:59:59 pm 01/18/2024</div>
    </div>
    <div><strong>Application Status:</strong> {(registered)? "Submitted" : "Not started"}</div>
    <button id="app-btn">
      {(registered)? "View Application" : "Start Application"}
    </button>
  </section>
  <script>
    const appBtn = document.getElementById("app-btn");
    appBtn?.addEventListener("click", () => {
      window.location.assign("/application");
    });
  </script>
</DashboardLayout>
<style>
  .user-info {
    width: 1000px;
    max-width: 100%;
    margin-top: 70px;
    font-size: x-large;
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .user-info > h1 {
    margin: 0;
    padding-left: 0;
  }
  .dashboard-result {
    box-sizing: border-box;
    width: 1000px;
    max-width: 100%;
    margin-top: 20px;
    border-radius: 4px;
    padding: 20px;
  }
  .dashboard-result.waiting, .dashboard-result.waitlist {
    background-color: #f5e3bd
  }
  .dashboard-result.declined {
    background-color: #f88378;
  }
  .dashboard-result.accepted {
    background-color: #afd9ae;
  }
  
  .dashboard-app {
    box-sizing: border-box;
    width: 1000px;
    max-width: 100%;
    margin-top: 20px;
    padding: 20px;
    border-radius: 4px;
    border: 1px solid;
  }
  #app-btn {
    margin-top: 16px;
    width: 100%;
    padding: 16px 32px;
    font-size: larger;
    background-color: #C0EDFF;
    /* color: white; */
    border: none;
    border-radius: 8px;
    cursor: pointer;
  }
  #app-btn:hover {
    filter: brightness(80%);
  }

</style>
